#!/bin/bash

## 组件版本
set_ver_nginx=1.24.0
set_ver_openssl=1.1.1w
set_ver_pcre=8.45
set_ver_zlib=1.3
set_ver_libzip=1.10.1
set_ver_php=8.0.30
## Server 标记
set_server_name='HMengine'

## 更换 yum 源
sed -e 's|^mirrorlist=|#mirrorlist=|g' \
    -e 's|^#baseurl=http://mirror.centos.org|baseurl=https://mirrors.bfsu.edu.cn|g' \
    -i /etc/yum.repos.d/CentOS-*.repo
yum makecache
yum install epel-release -y
sed -e 's!^metalink=!#metalink=!g' \
    -e 's!^#baseurl=!baseurl=!g' \
    -e 's!//download\.fedoraproject\.org/pub!//mirrors.bfsu.edu.cn!g' \
    -e 's!//download\.example/pub!//mirrors.bfsu.edu.cn!g' \
    -e 's!http://mirrors!https://mirrors!g' \
    -i /etc/yum.repos.d/epel*.repo
yum makecache fast

## 工作目录
mkdir /web_server
chmod -R 755 /web_server

## Nginx
yum install -y openssl openssl-devel libxml2 libxml2-devel curl curl-devel \
    libjpeg libjpeg-devel sqlite sqlite-devel libpng libpng-devel freetype-devel \
    gmp-devel libevent libevent-devel gcc gcc-c++ unzip python-docutils libedit \
    libedit-devel zlib zlib-devel git zip screen vim pcre-devel readline \
    libstdc++-devel automake autoconf wget unzip 
cd /root/hazx/nginx
tar zxvf nginx-${set_ver_nginx}.tar.gz
tar zxvf openssl-${set_ver_openssl}.tar.gz
tar zxvf pcre-${set_ver_pcre}.tar.gz
tar zxvf zlib-${set_ver_zlib}.tar.gz
cd /root/hazx/nginx/nginx-${set_ver_nginx}/
./configure \
    --prefix=/web_server/nginx \
    --with-openssl=/root/hazx/nginx/openssl-${set_ver_openssl} \
    --with-pcre=/root/hazx/nginx/pcre-${set_ver_pcre} \
    --with-zlib=/root/hazx/nginx/zlib-${set_ver_zlib} \
    --with-http_ssl_module \
    --with-http_sub_module \
    --with-http_stub_status_module \
    --with-pcre-jit \
    --with-pcre \
    --with-http_secure_link_module \
    --with-http_realip_module \
    --with-http_dav_module \
    --with-http_v2_module
sed -i "s/\"Server\:\ \"\ NGINX_VER\ CRLF\;/\"Server\:\ ${set_server_name}\"\ CRLF\;/" src/http/ngx_http_header_filter_module.c
sed -i "s/<center>\"\ NGINX_VER\ \"<\/center>/<center>${set_server_name}<\/center>/" src/http/ngx_http_special_response.c
sed -i "s/nginx\/\$nginx_version/\"${set_server_name}\"/" conf/fastcgi.conf
sed -i "s/nginx\/\$nginx_version/\"${set_server_name}\"/" conf/fastcgi_params
make -j${make_threads}
make install
mv /web_server/nginx/sbin/nginx /web_server/nginx/sbin/hmengine-n
mv /web_server/nginx/html /web_server/nginx_df_html
sed -i 's/root\ \ \ html/root\ \/web_server\/nginx_df_html\//' /web_server/nginx/conf/nginx.conf
sed -i "1iuser\ root\;" /web_server/nginx/conf/nginx.conf

## PHP8 依赖
yum install -y autoconf libxml2 libxml2-devel openssl openssl-devel zlib-devel \
    curl-devel libjpeg-devel libpng-devel freetype-devel mhash-devel mcrypt \
    libmcrypt libmcrypt-devel libwebp libwebp-devel mhash mhash-devel gcc \
    gcc-c++ make automake libsqlite3x libsqlite3x-devel libicu libicu-devel \
    oniguruma oniguruma-devel cmake3

## libzip
cd /root/hazx/php8
tar zxvf libzip-${set_ver_libzip}.tar.gz
cd libzip-${set_ver_libzip}
mkdir build
cd build
ln -s /bin/cmake3 /bin/cmake
cmake3 ..
make -j${make_threads:-1}
make install
ln -s /usr/local/lib64/libzip.so /usr/lib64/libzip.so
ln -s /usr/local/lib64/pkgconfig/libzip.pc /usr/lib64/pkgconfig/libzip.pc
ln -s /usr/local/lib64/libzip.so.5.1 /usr/lib64/libzip.so.5.1
ln -s /usr/local/lib64/libzip.so.5 /usr/lib64/libzip.so.5
mkdir -p /web_server/libzip/lib
mkdir -p /web_server/libzip/exec
cp lib/libzip.* /web_server/libzip/lib/
cp src/zip* /web_server/libzip/exec/
cp libzip.pc /web_server/libzip/

## PHP8
cd /root/hazx/php8
tar zxvf php-${set_ver_php}.tar.gz
cd php-${set_ver_php}
./configure \
    --prefix=/web_server/php \
    --with-config-file-path=/web_server/php/etc \
    --enable-fpm \
    --enable-bcmath \
    --enable-ftp \
    --enable-mbstring \
    --enable-soap \
    --enable-opcache \
    --enable-intl \
    --enable-mysqlnd \
    --enable-calendar \
    --enable-exif \
    --enable-xml \
    --enable-sockets=shared \
    --enable-gd \
    --with-gettext \
    --with-openssl \
    --with-zlib \
    --with-curl \
    --with-mhash \
    --with-mysqli \
    --with-pdo-mysql \
    --with-libdir=lib64 \
    --with-iconv \
    --with-pdo_sqlite \
    --with-sqlite3 \
    --with-zip \
    --with-libxml \
    --without-pear \
    --disable-fileinfo
make -j${make_threads:-1}
make install
cp ./php.ini-production /web_server/php/etc/php.ini
mv /web_server/php/etc/php-fpm.conf.default /web_server/php/etc/php-fpm.conf
mv /web_server/php/etc/php-fpm.d/www.conf.default /web_server/php/etc/php-fpm.d/www.conf

echo "build finishied."







